{"version":3,"file":"pgrouting.umd.js","sources":["../node_modules/ol/ImageState.js","../node_modules/ol/util.js","../node_modules/ol/size.js","../node_modules/ol/style/Image.js","../node_modules/ol/AssertionError.js","../node_modules/ol/asserts.js","../node_modules/ol/math.js","../node_modules/ol/color.js","../node_modules/ol/colorlike.js","../node_modules/ol/has.js","../node_modules/ol/dom.js","../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/Object.js","../node_modules/ol/css.js","../node_modules/ol/render/canvas.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/Feature.js","../node_modules/ol/transform.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/coordinate.js","../node_modules/ol/console.js","../node_modules/ol/proj.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/format/Feature.js","../node_modules/ol/format/JSONFeature.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/ol/format/GeoJSON.js","../node_modules/ol/format/TextFeature.js","../node_modules/ol/format/WKT.js","../node_modules/ol/source/Source.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Collection.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/render/EventType.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/render/Event.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/ViewHint.js","../node_modules/ol/style/flat.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/geom/Circle.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/Draw.js","../node_modules/ol/interaction/Modify.js","../node_modules/ol/proj/proj4.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/projs.js","../node_modules/proj4/lib/index.js","../node_modules/lit-html/lit-html.js","../pgrouting.js"],"sourcesContent":["/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.2.2';\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height where given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport TextFeature from './TextFeature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, import(\"../geom/Geometry.js\").GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon,\n};\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type Type.\n * @property {number|string} [value] Value.\n * @property {number} position Position.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  START: 0,\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n};\n\n/**\n * @type {Object<import(\"../geom/Geometry.js\").Type, string>}\n */\nconst wktTypeLookup = {\n  Point: 'POINT',\n  LineString: 'LINESTRING',\n  Polygon: 'POLYGON',\n  MultiPoint: 'MULTIPOINT',\n  MultiLineString: 'MULTILINESTRING',\n  MultiPolygon: 'MULTIPOLYGON',\n  GeometryCollection: 'GEOMETRYCOLLECTION',\n  Circle: 'CIRCLE',\n};\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean} [decimal] Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, decimal) {\n    decimal = decimal !== undefined ? decimal : false;\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal);\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const position = this.index_;\n    /** @type {number|string} */\n    let value = c;\n    let type;\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      type = TokenType.COMMA;\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER;\n      value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT;\n      value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return {position: position, value: value, type: type};\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_ = {\n      position: 0,\n      type: TokenType.START,\n    };\n\n    /**\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     * @private\n     */\n    this.layout_ = 'XY';\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    return this.token_.type == type;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_();\n    return this.parseGeometry_();\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/Geometry.js\").GeometryLayout} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n    let layout = 'XY';\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = 'XYZ';\n      } else if (dimInfo === M) {\n        layout = 'XYM';\n      } else if (dimInfo === ZM) {\n        layout = 'XYZM';\n      }\n      if (layout !== 'XY') {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(/** @type {number} */ (token.value));\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    );\n  }\n\n  /**\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = /** @type {string} */ (token.value);\n      this.layout_ = this.parseGeometryLayout_();\n      const isEmpty = this.isEmptyGeometry_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        if (isEmpty) {\n          return new GeometryCollection([]);\n        }\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      }\n      const ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      let coordinates;\n\n      if (isEmpty) {\n        if (geomType == 'POINT') {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      } else {\n        switch (geomType) {\n          case 'POINT': {\n            coordinates = this.parsePointText_();\n            break;\n          }\n          case 'LINESTRING': {\n            coordinates = this.parseLineStringText_();\n            break;\n          }\n          case 'POLYGON': {\n            coordinates = this.parsePolygonText_();\n            break;\n          }\n          case 'MULTIPOINT': {\n            coordinates = this.parseMultiPointText_();\n            break;\n          }\n          case 'MULTILINESTRING': {\n            coordinates = this.parseMultiLineStringText_();\n            break;\n          }\n          case 'MULTIPOLYGON': {\n            coordinates = this.parseMultiPolygonText_();\n            break;\n          }\n          default:\n            break;\n        }\n      }\n\n      return new ctor(coordinates, this.layout_);\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ =\n      options.splitCollection !== undefined ? options.splitCollection : false;\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geom = this.readGeometryFromText(text, options);\n    const feature = new Feature();\n    feature.setGeometry(geom);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, options);\n    if (this.splitCollection_ && geometry.getType() == 'GeometryCollection') {\n      geometries = /** @type {GeometryCollection} */ (\n        geometry\n      ).getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const geometry = this.parse_(text);\n    return transformGeometryWithOptions(geometry, false, options);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, options);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return encode(transformGeometryWithOptions(geometry, true, options));\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === 'XYZ' || layout === 'XYZM') {\n    dimInfo += Z;\n  }\n  if (layout === 'XYM' || layout === 'XYZM') {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n};\n\n/**\n * Encode a geometry as WKT.\n * @param {import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  const type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  let wktType = wktTypeLookup[type];\n  if (typeof (/** @type {?} */ (geom).getFlatCoordinates) === 'function') {\n    const dimInfo = encodeGeometryLayout(\n      /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom)\n    );\n    if (dimInfo.length > 0) {\n      wktType += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return wktType + ' ' + EMPTY;\n  }\n  return wktType + '(' + enc + ')';\n}\n\nexport default WKT;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = hitPointGeometry\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previsouly set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (!hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=window,s=i.trustedTypes,e=s?s.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,o=\"$lit$\",n=`lit$${(Math.random()+\"\").slice(9)}$`,l=\"?\"+n,h=`<${l}>`,r=document,d=()=>r.createComment(\"\"),u=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,c=Array.isArray,v=t=>c(t)||\"function\"==typeof(null==t?void 0:t[Symbol.iterator]),a=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,_=/-->/g,m=/>/g,p=RegExp(`>|${a}(?:([^\\\\s\"'>=/]+)(${a}*=${a}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),g=/'/g,$=/\"/g,y=/^(?:script|style|textarea|title)$/i,w=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=w(1),b=w(2),T=Symbol.for(\"lit-noChange\"),A=Symbol.for(\"lit-nothing\"),E=new WeakMap,C=r.createTreeWalker(r,129,null,!1),P=(t,i)=>{const s=t.length-1,l=[];let r,d=2===i?\"<svg>\":\"\",u=f;for(let i=0;i<s;i++){const s=t[i];let e,c,v=-1,a=0;for(;a<s.length&&(u.lastIndex=a,c=u.exec(s),null!==c);)a=u.lastIndex,u===f?\"!--\"===c[1]?u=_:void 0!==c[1]?u=m:void 0!==c[2]?(y.test(c[2])&&(r=RegExp(\"</\"+c[2],\"g\")),u=p):void 0!==c[3]&&(u=p):u===p?\">\"===c[0]?(u=null!=r?r:f,v=-1):void 0===c[1]?v=-2:(v=u.lastIndex-c[2].length,e=c[1],u=void 0===c[3]?p:'\"'===c[3]?$:g):u===$||u===g?u=p:u===_||u===m?u=f:(u=p,r=void 0);const w=u===p&&t[i+1].startsWith(\"/>\")?\" \":\"\";d+=u===f?s+h:v>=0?(l.push(e),s.slice(0,v)+o+s.slice(v)+n+w):s+n+(-2===v?(l.push(void 0),i):w)}const c=d+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\");if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return[void 0!==e?e.createHTML(c):c,l]};class V{constructor({strings:t,_$litType$:i},e){let h;this.parts=[];let r=0,u=0;const c=t.length-1,v=this.parts,[a,f]=P(t,i);if(this.el=V.createElement(a,e),C.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(h=C.nextNode())&&v.length<c;){if(1===h.nodeType){if(h.hasAttributes()){const t=[];for(const i of h.getAttributeNames())if(i.endsWith(o)||i.startsWith(n)){const s=f[u++];if(t.push(i),void 0!==s){const t=h.getAttribute(s.toLowerCase()+o).split(n),i=/([.?@])?(.*)/.exec(s);v.push({type:1,index:r,name:i[2],strings:t,ctor:\".\"===i[1]?k:\"?\"===i[1]?I:\"@\"===i[1]?L:R})}else v.push({type:6,index:r})}for(const i of t)h.removeAttribute(i)}if(y.test(h.tagName)){const t=h.textContent.split(n),i=t.length-1;if(i>0){h.textContent=s?s.emptyScript:\"\";for(let s=0;s<i;s++)h.append(t[s],d()),C.nextNode(),v.push({type:2,index:++r});h.append(t[i],d())}}}else if(8===h.nodeType)if(h.data===l)v.push({type:2,index:r});else{let t=-1;for(;-1!==(t=h.data.indexOf(n,t+1));)v.push({type:7,index:r}),t+=n.length-1}r++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function N(t,i,s=t,e){var o,n,l,h;if(i===T)return i;let r=void 0!==e?null===(o=s._$Co)||void 0===o?void 0:o[e]:s._$Cl;const d=u(i)?void 0:i._$litDirective$;return(null==r?void 0:r.constructor)!==d&&(null===(n=null==r?void 0:r._$AO)||void 0===n||n.call(r,!1),void 0===d?r=void 0:(r=new d(t),r._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Co)&&void 0!==l?l:h._$Co=[])[e]=r:s._$Cl=r),void 0!==r&&(i=N(t,r._$AS(t,i.values),r,e)),i}class S{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:r).importNode(s,!0);C.currentNode=o;let n=C.nextNode(),l=0,h=0,d=e[0];for(;void 0!==d;){if(l===d.index){let i;2===d.type?i=new M(n,n.nextSibling,this,t):1===d.type?i=new d.ctor(n,d.name,d.strings,this,t):6===d.type&&(i=new z(n,this,t)),this._$AV.push(i),d=e[++h]}l!==(null==d?void 0:d.index)&&(n=C.nextNode(),l++)}return C.currentNode=r,o}v(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class M{constructor(t,i,s,e){var o;this.type=2,this._$AH=A,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cp=null===(o=null==e?void 0:e.isConnected)||void 0===o||o}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cp}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===(null==t?void 0:t.nodeType)&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=N(this,t,i),u(t)?t===A||null==t||\"\"===t?(this._$AH!==A&&this._$AR(),this._$AH=A):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):v(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==A&&u(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=V.createElement(e.h,this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.v(s);else{const t=new S(o,this),i=t.u(this.options);t.v(s),this.$(i),this._$AH=t}}_$AC(t){let i=E.get(t.strings);return void 0===i&&E.set(t.strings,i=new V(t)),i}T(t){c(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new M(this.k(d()),this.k(d()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){var i;void 0===this._$AM&&(this._$Cp=t,null===(i=this._$AP)||void 0===i||i.call(this,t))}}class R{constructor(t,i,s,e,o){this.type=1,this._$AH=A,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=A}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=N(this,t,i,0),n=!u(t)||t!==this._$AH&&t!==T,n&&(this._$AH=t);else{const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=N(this,e[s+l],i,l),h===T&&(h=this._$AH[l]),n||(n=!u(h)||h!==this._$AH[l]),h===A?t=A:t!==A&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h}n&&!e&&this.j(t)}j(t){t===A?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\")}}class k extends R{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===A?void 0:t}}const H=s?s.emptyScript:\"\";class I extends R{constructor(){super(...arguments),this.type=4}j(t){t&&t!==A?this.element.setAttribute(this.name,H):this.element.removeAttribute(this.name)}}class L extends R{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5}_$AI(t,i=this){var s;if((t=null!==(s=N(this,t,i,0))&&void 0!==s?s:A)===T)return;const e=this._$AH,o=t===A&&e!==A||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==A&&(e===A||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){N(this,t)}}const Z={O:o,P:n,A:l,C:1,M:P,L:S,D:v,R:N,I:M,V:R,H:I,N:L,U:k,F:z},j=i.litHtmlPolyfillSupport;null==j||j(V,M),(null!==(t=i.litHtmlVersions)&&void 0!==t?t:i.litHtmlVersions=[]).push(\"2.7.4\");const B=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new M(i.insertBefore(d(),t),t,void 0,null!=s?s:{})}return l._$AI(t),l};export{Z as _$LH,x as html,T as noChange,A as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import { Circle as CircleStyle, Fill, Stroke, Text, Style } from 'ol/style';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport WKT from 'ol/format/WKT.js';\nimport { Vector as VectorSource } from 'ol/source';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport { Draw , Modify } from 'ol/interaction.js';\nimport { altKeyOnly } from 'ol/events/condition.js';\nimport Feature from 'ol/Feature.js';\nimport Point from 'ol/geom/Point.js';\nimport LineString from 'ol/geom/LineString.js';\nimport { get as getProjection } from 'ol/proj.js';\nimport { register } from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\n\nimport { html, render } from 'lit-html';\n\nclass pgRouting extends HTMLElement {\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n\n        for (const [ref, def] of Object.entries(lizProj4)) {\n            if (ref !== \"\" && !getProjection(ref)) {\n                proj4.defs(ref, def);\n            }\n        }\n\n        register(proj4);\n\n        // Get locales\n        this._locales = '';\n\n        this._mergedRoads = [];\n        this._POIFeatures = [];\n\n        // Styles\n        this._routeLineColor = '#587fc6';\n        this._routePointFillColor = 'white';\n        this._routeIntermediatePointStrokeColor = '#587fc6';\n        this._routeStartPointStrokeColor = 'green';\n        this._routeEndPointStrokeColor = 'red';\n\n        // Linestring geometry generated from the whole route\n        this._routeGeometry = null;\n\n        this._nodePosition = 0;\n\n        this._mainTemplate = () => html`\n            <div class=\"menu-content\">\n                <p>${this._locales['draw.message']}</p>\n                <div class=\"commands\">\n                    <button class=\"btn\" data-original-title=\"${this._locales['route.redraw']}\" @click=${ () => this.restartDraw()}>\n                        <svg width=\"18\" height=\"18\">\n                            <use xlink:href=\"#refresh\" />\n                        </svg>\n                    </button>\n                    ${lizMap.mainLizmap.featureStorage ? html`\n                    <button class=\"btn copy-route\" ?disabled=${!this._routeLayer.getSource().getFeatures().length} data-original-title=\"${this._locales['route.copy']}\" @click=${ () => this.copyToFeatureStorage()}></button>` : ''}\n                </div>\n                <div class=\"pgrouting\">\n                    ${this._mergedRoads.length > 0 ? html`\n                    <div class=\"roadmap\">\n                        <h4>${this._locales['roadmap.title']}</h4>\n                        <dl>\n                            ${this._mergedRoads.map((road) => html`<dt>${road.label ? road.label : this._locales['road.label.missing']}</dt><dd>${road.distance < 1 ? 1 : Math.round(road.distance)}m</dd>`)}\n                        </dl>\n                    </div>`: ''\n                    }\n                    ${this._POIFeatures.length > 0 ? html`\n                    <div class=\"poi\">\n                        <h4>${this._locales['poi.title']}</h4>\n                        <dl>\n                            ${this._POIFeatures.map((feature) => html`<dt>${feature.properties.label}</dt><dd>${feature.properties.description}</dd><dd>${feature.properties.type}</dd>`)}\n                        </dl>\n                    </div>`: ''\n                    }\n                </div>\n            </div>`;\n\n\n        fetch(`${lizUrls.basepath}index.php/pgrouting/translate/`)\n            .then((response) => {\n                return response.json();\n            })\n            .then((json) => {\n                if (json) {\n                    this._locales = JSON.parse(json);\n                }\n            });\n\n        lizMap.events.on({\n            uicreated: () => {\n                this.initDraw();\n                this.toggleDrawVisibility(false);\n            },\n            dockopened: (evt) => {\n                if (evt.id === \"pgrouting\") {\n                    lizMap.mainLizmap.newOlMap = true;\n                    this.toggleDrawVisibility(true);\n                    render(this._mainTemplate(), this);\n                    // Add tooltip on buttons\n                    $('.btn', this).tooltip({\n                        placement: 'top'\n                    });\n                }\n            },\n            dockclosed: (evt) => {\n                if (evt.id === \"pgrouting\") {\n                    lizMap.mainLizmap.newOlMap = false;\n                    this.toggleDrawVisibility(false);\n                }\n            }\n        });\n    }\n\n    disconnectedCallback() {\n    }\n\n    initDraw() {\n        this._milestoneRouteMap = new Map();\n\n        // Init milestones draw\n        const milestoneSource = new VectorSource({\n            useSpatialIndex: false\n        });\n\n        // Refresh route only when user add a feature\n        // Not when we programmaticaly add a feature\n        this._userAddFeature = true;\n        milestoneSource.on('addfeature', event => {\n            if (this._userAddFeature) {\n                this._refreshRoute(event.feature, 'add');\n            }\n        });\n\n        this._drawInteraction = new Draw({\n            source: milestoneSource,\n            type: \"Point\",\n        });\n\n        this._modifyMilestone = new Modify({\n            source: milestoneSource,\n            deleteCondition: evt => {\n                if(evt.type === 'singleclick' && altKeyOnly(evt)){\n                    const features = lizMap.mainLizmap.map.getFeaturesAtPixel(evt.pixel, {\n                        layerFilter: layer => {\n                            return layer === this._milestoneLayer;\n                        },\n                        hitTolerance: 8\n                    });\n                    this._refreshRoute(features[0], 'delete');\n                    this._milestoneLayer.getSource().removeFeature(features[0]);\n                }\n                return false;\n            }\n        });\n\n        this._modifyMilestone.on('modifyend', event => {\n            this._refreshRoute(event.features.item(0), 'modify');\n        });\n\n        this._milestoneLayer = new VectorLayer({\n            source: milestoneSource,\n            style: (feature) => {\n                const milestoneFeatures = this._milestoneLayer.getSource().getFeaturesCollection().getArray();\n                const featureIndex = milestoneFeatures.indexOf(feature);\n                let fillColor = this._routePointFillColor;\n                let strokeColor = this._routeIntermediatePointStrokeColor; // pale blue\n                let strokeWidth = 3;\n                let circleRadius = 12;\n                let labelText = '';\n\n                // Start is green, end is red and intermediates are blue\n                if (featureIndex === 0) {\n                    strokeColor = this._routeStartPointStrokeColor;\n                    strokeWidth = 6;\n                    circleRadius = 8;\n                } else if (featureIndex === milestoneFeatures.length - 1) {\n                    strokeColor = this._routeEndPointStrokeColor;\n                    strokeWidth = 6;\n                    circleRadius = 8;\n                } else {\n                    labelText = featureIndex.toString();\n                }\n                return new Style({\n                    image: new CircleStyle({\n                        radius: circleRadius,\n                        fill: new Fill({\n                            color: fillColor,\n                        }),\n                        stroke: new Stroke({\n                            color: strokeColor,\n                            width: strokeWidth,\n                        }),\n                    }),\n                    text: new Text({\n                        text: labelText,\n                        font: 'bold 14px sans-serif',\n                        fill: new Fill({\n                            color: strokeColor,\n                        }),\n                        offsetY: 1,\n                        justify: 'center'\n                    })\n                });\n            }\n        });\n\n        // Display route\n        const routeSource = new VectorSource();\n\n        this._modifyRoute = new Modify({\n            source: routeSource\n        });\n\n        this._modifyRoute.on('modifyend', event => {\n            const modifiedFeature = event.features.item(0);\n            const coords = event.mapBrowserEvent.coordinate;\n\n            this._milestoneRouteMap.forEach((routeFeatures, milestoneFeatures) => {\n                for (const routeFeature of routeFeatures) {\n                    if (modifiedFeature === routeFeature) {\n                        // Remove and replace milestone features to add the new one\n                        const oldMilestoneFeatures = this._milestoneLayer.getSource().getFeatures();\n                        this._milestoneLayer.getSource().clear();\n\n                        const newFeature = new Feature({\n                            geometry: new Point(coords)\n                        });\n\n                        // Avoid 'addfeature' callback\n                        this._userAddFeature = false;\n                        const newMilestoneFeatures = Array.from(oldMilestoneFeatures);\n\n                        oldMilestoneFeatures.forEach((oldMilestoneFeature, index) => {\n                            if(oldMilestoneFeature === milestoneFeatures[0]){\n                                newMilestoneFeatures.splice(index + 1, 0, newFeature);\n                                return;\n                            }\n                        });\n\n                        this._milestoneLayer.getSource().addFeatures(newMilestoneFeatures);\n                        this._userAddFeature = true;\n\n                        // Remove previous routes mapped to the milestone feature\n                        const oldRouteFeatures = this._milestoneRouteMap.get(milestoneFeatures);\n\n                        for (const routeFeature of oldRouteFeatures) {\n                            this._routeLayer.getSource().removeFeature(routeFeature);\n                        }\n\n                        this._milestoneRouteMap.delete(milestoneFeatures);\n\n                        this._getRoute(\n                            milestoneFeatures[0],\n                            newFeature\n                        );\n\n                        this._getRoute(\n                            newFeature,\n                            milestoneFeatures[1]\n                        );\n                        return;\n                    }\n                }\n            });\n        });\n\n        this._routeLayer = new VectorLayer({\n            source: routeSource,\n            style: (feature) => {\n                const geometry = feature.getGeometry();\n                const styles = [\n                    // linestring\n                    new Style({\n                        stroke: new Stroke({\n                            color: this._routeLineColor,\n                            width: 11,\n                        }),\n                    }),\n                    new Style({\n                        stroke: new Stroke({\n                            color: this._routeLineColor,\n                            width: 9,\n                        }),\n                    }),\n                ];\n\n                let s = 0;\n                geometry.forEachSegment((start, end) => {\n                    let arrowWidth = 0;\n                    let arrowFontSize = 0;\n                    // Only show one arrow at every 7 positions\n                    if (this._nodePosition % 10 == 0) {\n                        arrowWidth = 1;\n                        arrowFontSize = 16;\n                    }\n                    const dx = end[0] - start[0];\n                    const dy = end[1] - start[1];\n                    const rotation = Math.atan2(dy, dx);\n\n                    // arrows\n                    styles.push(\n                        new Style({\n                            geometry: new Point(end),\n                            text: new Text({\n                                text: '>',\n                                font: `normal ${arrowFontSize}px sans-serif`,\n                                rotateWithView: true,\n                                rotation: -rotation,\n                                stroke: new Stroke({\n                                    color: 'white',\n                                    width: arrowWidth,\n                                }),\n                                fill: new Fill({\n                                    color: 'white',\n                                })\n                            })\n                        })\n                    );\n\n                    this._nodePosition++;\n                });\n\n                return styles;\n            },\n        });\n\n        // Interaction's order matters. We priorize milestones modification\n        lizMap.mainLizmap.map.addInteraction(this._drawInteraction);\n        lizMap.mainLizmap.map.addInteraction(this._modifyRoute);\n        lizMap.mainLizmap.map.addInteraction(this._modifyMilestone);\n\n        lizMap.mainLizmap.map.addLayer(this._routeLayer);\n        lizMap.mainLizmap.map.addLayer(this._milestoneLayer);\n\n        // Show mouse pointer when hovering origin or destination points\n        lizMap.mainLizmap.map.on('pointermove', (e) => {\n            if (e.dragging) {\n                return;\n            }\n            const pixel = lizMap.mainLizmap.map.getEventPixel(e.originalEvent);\n            const featuresAtPixel = lizMap.mainLizmap.map.getFeaturesAtPixel(pixel);\n            const featureHover = featuresAtPixel.some(feature => this._milestoneLayer.getSource().getFeatures().includes(feature));\n\n            lizMap.mainLizmap.map.getViewport().style.cursor = featureHover ? 'pointer' : '';\n        });\n    }\n\n    generateFeatureGeometry() {\n        // Generate the ordered coordinates of the whole routing complex linestring\n        this._routeGeometry = null;\n        const coordinates = [];\n        let lastPushedCoord;\n        for (const milestoneFeature of this._milestoneLayer.getSource().getFeaturesCollection().getArray()) {\n            this._milestoneRouteMap.forEach((routeFeatures, milestoneFeatures) => {\n                if (milestoneFeatures[0] === milestoneFeature) {\n                    for (const routeFeature of routeFeatures) {\n                        for (const coord of routeFeature.getGeometry().getCoordinates()) {\n                            // Do not add the coordinates if they are equal to the previous ones\n                            if (lastPushedCoord && lastPushedCoord[0] == coord[0] && lastPushedCoord[1] == coord[1]) {\n                                continue;\n                            }\n                            lastPushedCoord = coord;\n                            coordinates.push(coord);\n                        }\n                    }\n\n                    return;\n                }\n            });\n        }\n\n        // Save these coordinates as an OpenLayer Linestring geometry\n        let olGeometry = new LineString(coordinates);\n\n        // Set the variable containing the generated geometry\n        this._routeGeometry = olGeometry;\n    }\n\n    copyToFeatureStorage() {\n\n        // Generate the OpenLayers geometry from the route parts\n        this.generateFeatureGeometry();\n\n        // Save this geometry in Lizmap Storage\n        if (this._routeGeometry !== null) {\n            lizMap.mainLizmap.featureStorage.set([new Feature({\n                geometry: this._routeGeometry,\n            })], 'pgrouting');\n            lizMap.addMessage(this._locales['route.copied'], 'success', true, 1500);\n        }\n    }\n\n    restartDraw() {\n        this._milestoneRouteMap.clear();\n        this._routeLayer.getSource().clear();\n        this._milestoneLayer.getSource().clear();\n\n        this._mergedRoads = [];\n        this._POIFeatures = [];\n        this._routeGeometry = null;\n\n        render(this._mainTemplate(), this);\n    }\n\n    toggleDrawVisibility(visible){\n        if (this._milestoneLayer) {\n            this._milestoneLayer.setVisible(visible);\n        }\n\n        if (this._routeLayer) {\n            this._routeLayer.setVisible(visible);\n        }\n    }\n\n    _refreshRoute(changedFeature, change) {\n        const milestoneFeatures = this._milestoneLayer.getSource().getFeaturesCollection().getArray();\n        const featuresLength = milestoneFeatures.length;\n\n        if (change === 'add') {\n            if (featuresLength > 1) {\n                this._getRoute(\n                    milestoneFeatures[featuresLength - 2],\n                    milestoneFeatures[featuresLength - 1]\n                );\n            }\n        } else {\n            milestoneFeatures.forEach((feature, index) => {\n                if (changedFeature === feature) {\n                    // Remove previous routes mapped to the milestone feature\n                    this._milestoneRouteMap.forEach((routeFeatures, milestoneFeatures) => {\n                        if (milestoneFeatures.includes(changedFeature)) {\n                            for (const routeFeature of routeFeatures) {\n                                this._routeLayer.getSource().removeFeature(routeFeature);\n                            }\n                            this._milestoneRouteMap.delete(milestoneFeatures);\n                        }\n                    });\n\n                    if (change === 'modify') {\n                        // Refresh route from changedFeature to previous feature\n                        if (index !== 0) {\n                            this._getRoute(\n                                milestoneFeatures[index - 1],\n                                changedFeature\n                            );\n                        }\n                        // Refresh route from changedFeature to next feature\n                        if (index !== featuresLength - 1) {\n                            this._getRoute(\n                                changedFeature,\n                                milestoneFeatures[index + 1]\n                            );\n                        }\n                    } else if (change === 'delete') {\n                        // Deletion of intermediate milestones\n                        if (index !== 0 && index !== featuresLength - 1) {\n                            this._getRoute(\n                                milestoneFeatures[index - 1],\n                                milestoneFeatures[index + 1]\n                            );\n                        } else { // Deletion of start or end milestone. No need to query\n                            this._refreshRoadMap();\n\n                            // Send the Lizmap event with the current route geometry\n                            this._sendRouteGeometryAsWKT();\n\n                            this._nodePosition = 0;\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    _getRoute(originFeature, destinationFeature) {\n\n        const origin = lizMap.mainLizmap.transform(originFeature.getGeometry().getCoordinates(), lizMap.mainLizmap.projection, 'EPSG:4326');\n        const destination = lizMap.mainLizmap.transform(destinationFeature.getGeometry().getCoordinates(), lizMap.mainLizmap.projection, 'EPSG:4326');\n\n        fetch(`${lizUrls.basepath}index.php/pgrouting/?repository=${lizUrls.params.repository}&project=${lizUrls.params.project}&origin=${origin[0]},${origin[1]}&destination=${destination[0]},${destination[1]}&crs=4326&option=get_short_path`)\n            .then((response) => {\n                return response.json();\n            })\n            .then((json) => {\n                // Remove route if any and create new one\n                this._POIFeatures = [];\n\n                if (json?.routing?.features) {\n\n                    // Remove `id` property as there is collision\n                    for (const feature of json.routing.features) {\n                        delete feature.id;\n                    }\n\n                    const routeFeatures = new GeoJSON().readFeatures(json.routing, {\n                        dataProjection: 'EPSG:4326',\n                        featureProjection: lizMap.mainLizmap.projection\n                    });\n\n                    this._routeLayer.getSource().addFeatures(routeFeatures);\n\n                    this._milestoneRouteMap.set([originFeature, destinationFeature], routeFeatures);\n\n                    // Refresh the text roadmap\n                    this._refreshRoadMap();\n\n                    // Send the Lizmap event with the current route geometry\n                    this._sendRouteGeometryAsWKT();\n\n                    // Set back the node position used for arrow drawing to 0\n                    this._nodePosition = 0;\n\n                    // Get POIs\n                    this._POIFeatures = json?.poi?.features ?? [];\n                } else {\n                    lizMap.addMessage(this._locales['route.error'], 'error', true);\n                }\n            });\n    }\n\n    _refreshRoadMap() {\n        this._mergedRoads = [];\n\n        this._milestoneLayer.getSource().getFeaturesCollection().forEach((milestone, index, milestones) => {\n            this._milestoneRouteMap.forEach((routeFeatures, milestoneFeatures) => {\n                if (milestoneFeatures[0] === milestone && milestoneFeatures[1] === milestones[index + 1]) {\n                    // Get roadmap\n                    // Merge road with same label when sibling\n                    let mergedRoads = [];\n                    let previousLabel = '';\n\n                    for (const feature of routeFeatures) {\n                        const label = feature.get('label');\n                        const distance = feature.get('dist');\n\n                        if (label !== previousLabel) {\n                            mergedRoads.push({ label: label, distance: distance });\n                        } else {\n                            mergedRoads[mergedRoads.length - 1] = { label: label, distance: distance + mergedRoads[mergedRoads.length - 1].distance }\n                        }\n                        previousLabel = label;\n                    }\n\n                    this._mergedRoads = this._mergedRoads.concat(mergedRoads);\n                    return;\n                }\n            });\n        });\n        render(this._mainTemplate(), this);\n    }\n\n    /**\n     * Convert the current route linestring geometry into WKT\n     * and trigger the Lizmap event lizmapPgroutingWktGeometryExported\n     * with the generated WKT\n     */\n    _sendRouteGeometryAsWKT() {\n\n        // Generate the OpenLayers geometry from the route parts\n        this.generateFeatureGeometry();\n\n        // Trigger a Lizmap event with the stored geometry exported as WKT\n        // Useful to get used by LWC <= 3.7 by other JS codes\n        if (this._routeGeometry !== null) {\n            // convert the OpenLayers geometry to WKT\n            var format = new WKT();\n            var wktGeometry = format.writeGeometry(this._routeGeometry);\n\n            // Send the Lizmap event\n            lizMap.events.triggerEvent(\n                'lizmapPgroutingWktGeometryExported',\n                {'wkt': wktGeometry}\n            );\n        }\n\n    }\n}\n\nwindow.customElements.define('lizmap-pgrouting', pgRouting);\n"],"names":["ImageState","abstract","uidCounter_","getUid","obj","toSize","size","dest","ImageStyle","options","scale","pixelRatio","displacement","opacity","rotateWithView","rotation","listener","ImageStyle$1","messages","AssertionError","code","message","AssertionError$1","assert","assertion","errorCode","clamp","value","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","squaredDistance","lerp","a","b","toFixed","n","decimals","factor","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","toString","fromNamed","el","rgb","fromString","cache","cacheSize","i","key","fromStringInternal_","asArray","s","r","g","d","hasAlpha","normalize","asColorLike","ua","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","passive","createCanvasContext2D","width","height","canvasPool","settings","canvas","releaseCanvas","context","BaseEvent","type","Event","ObjectEventType","Disposable","Disposable$1","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","reverseSubArray","arr","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","target","listeners","listenersForType","event","isString","evt","dispatching","pendingRemovals","propagate","ii","pr","index","EventTarget","EventType","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","Observable","len","keys","unByKey","Observable$1","ObjectEvent","oldValue","BaseObject","values","eventType","silent","source","BaseObject$1","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","style","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","prev","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","transform","labelOrImage","originX","originY","w","h","executeLabelInstructions","label","contextInstructions","RegularShape","fill","image","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","points","alpha","e","miterRatio","k","l","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineDash","lineDashOffset","strokeStyle","add","maxRadius","radius","radius2","startAngle","step","angle0","radiusC","RegularShape$1","CircleStyle","CircleStyle$1","Fill","Fill$1","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getCenter","getHeight","getWidth","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","wrapX","projection","projectionExtent","center","worldWidth","wrapAndSliceX","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","error","taintedTestContext","IconImage","imageState","ctx","get","iconImageCache","Icon","getIconImage","setScale","anchor","iconImageSize","widthScale","heightScale","Icon$1","Stroke","lineCap","Stroke$1","Style","defaultGeometryFunction","geometry","renderer","feature","zIndex","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","resolution","createEditingStyle","white","blue","Style$1","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","offsetX","offsetY","placement","textAlign","justify","textBaseline","padding","Text$1","Feature","geometryOrProperties","properties","createStyleFunction","id","name","Feature$1","create","set","c","f","setFromArray","transform1","transform2","apply","makeScale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","det","determinant","mat","transformStringDiv","transformString","node","METERS_PER_UNIT","Projection$2","global","tileGrid","worldExtent","func","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","Projection","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","transforms","destination","transformFn","sourceCode","destinationCode","closestOnSegment","segment","x0","y0","along","coordinate1","coordinate2","coord1","coord2","distance","squaredDistanceToSegment","worldsAway","getWorldsAway","sourceExtentWidth","levels","level","warn","args","showCoordinateWarning","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createTransformFromCoordinateTransform","coordTransform","pointLength","j","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","getTransformFromProjections","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","rotate","anchorX","anchorY","deltaX","deltaY","translate","tmpTransform","createTransform","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","tolerance","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","Geometry$1","GeometryCollection","geometries","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","clonedGeometries","GeometryCollection$1","FeatureFormat","dataProjection","features","transformGeometryWithOptions","write","featureProjection","equivalentProjection","power","JSONFeature","getObject","JSONFeature$1","SimpleGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","SimpleGeometry$1","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","x3","y3","quantizeArray","quantizeMultiArray","simplifiedEndss","forEach","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","interpolatePoint","fraction","cumulativeLengths","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","LineString","lineString","LineString$1","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiLineString$1","Point$2","Point","MultiPoint","multiPoint","MultiPoint$1","linearRing","twiceArea","linearRings","area","linearRingss","LinearRing","linearRingArea","LinearRing$1","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","polygon","linearRingsArea","flatCenter","Polygon$1","MultiPolygon","thisLayout","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","MultiPolygon$1","GeoJSON","geoJSONFeature","readGeometry","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","GeoJSON$1","TextFeature","getText","TextFeature$1","GeometryConstructor","EMPTY","Z","M","ZM","TokenType","wktTypeLookup","Lexer","wkt","decimal","position","scientificNotation","Parser$1","lexer","isMatch","dimToken","dimInfo","dimensions","token","geomType","ctor","WKT","Parser","geom","collection","encode","encodePointGeometry","encodeMultiPointGeometry","array","components","encodeGeometryCollectionGeometry","geoms","encodeLineStringGeometry","encodeMultiLineStringGeometry","encodePolygonGeometry","rings","encodeMultiPolygonGeometry","encodeGeometryLayout","GeometryEncoder","geometryEncoder","enc","wktType","WKT$1","Source","adaptAttributions","self","resolve","reject","attributions","state","attributionLike","frameState","Source$1","CollectionEventType","Property","CollectionEvent","element","Collection","elem","except","Collection$1","quickselect","left","compare","quickselectStep","defaultCompare","z","sd","newLeft","newRight","swap","RBush$2","maxEntries","bbox","result","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","N","calcBBox","N2","N1","multiSelect","right2","right3","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","children","RBush","RBush_","extents","uid","rbush","RBush$1","VectorEventType","all","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","featureKey","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","filter","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","VectorSource$1","LayerProperty","BaseLayer","managed","states","background","maxResolution","minResolution","maxZoom","minZoom","visible","zindex","BaseLayer$1","RenderEventType","Layer","baseOptions","pixel","layerRenderer","map","layerStatesArray","layerState","arrayLayerState","Layer$1","LayerRenderer","layer","tiles","zoom","tile","tileRange","hitTolerance","matches","LayerRenderer$1","RenderEvent","inversePixelTransform","RenderEvent$1","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","container","topLeft","topRight","bottomRight","bottomLeft","applyTransform","inverted","CanvasLayerRenderer$1","ViewHint","toStyle","flatStyle","getFill","getStroke","getImage","prefix","iconSrc","iconImg","shapePoints","circleRadius","Circle","BaseVectorLayer","renderOrder","styleLike","toStyleFunction","BaseVectorLayer$1","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasBuilder","maxExtent","dashArray","dash","tmpCoord","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","Builder","CanvasImageBuilder","myBegin","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","PolygonBuilder","matchingChunk","chunkStart","chunkEnd","chunkM","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","flatEnd","o","oo","range","geometryWidths","beg","keep","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilderGroup","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","delta","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","centerX","centerY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","contextScale","imageOrLabel","box","strokePadding","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","coords","declutterMode","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","Executor$1","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasExecutorGroup","CanvasImmediateRenderer","userTransform","localTransform","close","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","executorGroup","viewState","vectorSource","viewHints","multiWorld","endWorld","world","compositionContext","canvasTransform","transformToString","declutterExecutorGroup","clipped","render","layerExtent","intersectsExtent","executorGroups","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","ready","dirty","userExtent","replayGroupInstructions","CanvasVectorLayerRenderer$1","VectorLayer","VectorLayer$1","circle","circleExtent","Circle$1","MapEvent","MapEvent$1","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEvent$1","MapBrowserEventType","InteractionProperty","Interaction","mapBrowserEvent","active","Interaction$1","PointerInteraction","stopEvent","handledUp","handled","PointerInteraction$1","altKeyOnly","always","never","singleClick","noModifierKeys","shiftKeyOnly","primaryAction","pointerEvent","DrawEventType","DrawEvent","getTraceTargets","targets","appendGeometryTraceTargets","getSquaredDistance","getCoordinate","count","getCumulativeSquaredDistance","startIndex","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendTraceTarget","polys","sharedUpdateInfo","getTraceTargetUpdate","traceState","snapTolerance","closestTargetDistance","newTargetIndex","newEndIndex","targetIndex","minSegmentDistance","coordinateIndex","rel","getPointSegmentRelationship","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","ring","sharedRel","px","py","Draw","pointerOptions","getMode","geometryFunction","mode","squaredLength","squaredCoordinateDistance","getDefaultStyleFunction","trace","condition","move","pass","lowerLeft","upperRight","previouslyForward","currentlyForward","fromIndex","toIndex","remove","updatedTraceTarget","oldTarget","tracing","startingToDraw","downPx","clickPx","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchLineGeom","sketchFeature","newDrawing","ending","sketchFeatures","overlaySource","Draw$1","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","tempExtent","tempSegment","ModifyEventType","ModifyEvent","Modify","writer","segments","ss","rBush","nodesToRemove","nodeToRemove","segmentData","lines","centerSegmentData","circumferenceSegmentData","featureSegments","createExtent","vertexFeature","vertex","dragSegment","depth","coordinateDistance","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","coordinatesEqual","sortByDistance","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","layerFilter","viewExtent","bufferExtent","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","newSegmentData","newSegmentData2","dragSegments","segmentsByFeature","deleted","component","newIndex","pointCoordinates","distanceToCenterSquared","distanceToCircumference","Modify$1","registered","register","proj4","projCodes","def","units","code1","proj1","code2","proj2","globals","defs","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","ignoredChar","lkey","testkey","processedKey","projStr","defData","paramObj","v","split","paramName","paramVal","paramOutname","params","unit","pm","PrimeMeridian","legalAxis","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","char","newObjects","parseString","txt","parser","mapit","thing","out","newObj","sExpr","rename","outName","inName","d2r","cleanWKT","axisOrder","axis","geogcs","toMeter","ratio","renamer","list","lisp","that","parseProj","testObj","testDef","codeWords","testWKT","word","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","eccnth","dphi","init","lon","lat","names","merc","identity","pt","projs","projStore","proj","exports$2","WGS84","eccentricity","rf","R_A","a2","b2","es","ep2","sphere","ellps","ellipse","Ellipsoid","exports$1","datum","datumCode","datum_params","nadgrids","loadedNadgrids","nadgrid","view","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","getNadgrids","grids","parseNadgridString","optional","secondsToRadians","seconds","nFields","decodeString","gridOffset","subHeader","readGridHeader","readGridNodes","lngColumnCount","latColumnCount","mapNodes","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","srsCode","json","parseCode","ourProj","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","datumObj","compareDatums","geodeticToGeocentric","Longitude","Latitude","Height","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","geocentricToGeodetic","genau","genau2","maxiter","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","geocentricToWgs84","datum_type","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","datum_transform","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","attemptedGrids","grid","subgrid","epsilon","applySubgridShift","pin","ct","tb","nadInterpolate","tol","dif","del","indx","frct","inx","f00","f10","f11","f01","m11","m10","m00","m01","adjust_axis","denorm","xin","yin","zin","common","checkSanity","checkCoord","num","checkNotWGS","enforceAxis","wgs84","toPoint","hasZ","transformer","from","to","transformedArray","checkProj","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","ll","accuracy","LLtoUTM","UTMtoLL","decode","degToRad","deg","radToDeg","rad","Lat","Long","eccSquared","k0","LongOrigin","eccPrimeSquared","T","C","LatRad","LongRad","LongOriginRad","ZoneNumber","UTMEasting","UTMNorthing","getLetterDesignator","utm","zoneLetter","zoneNumber","e1","T1","C1","R1","D","mu","phi1Rad","LetterDesignator","seasting","snorthing","get100kID","easting","northing","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","hunK","sb","testChar","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","sep","sepEasting","sepNorthing","accuracyBonus","sepEastingString","sepNorthingString","curCol","eastingValue","rewindMarker","curRow","northingValue","mgrsStr","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","pj_enfn","en","pj_mlfn","sphi","cphi","MAX_ITER","pj_inv_mlfn","arg","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","ds","temp","tmerc","sinh","hypot","log1py","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr1","hr2","hr","cosh","clens_cmplx","arg_i","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi2","np","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","etmerc","adjust_zone","zone","dependsOn","srat","esinp","exp","DEL_TOL","gauss","sinc","cosc","cosl","rho","sterea","ssfn_","phit","eccen","sinlat","coslat","sinX","cosX","rh","dlon","ce","Chi","stere","phy0","sinPhy0","semiMajorAxis","invF","flattening","e2","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","somerc","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","L","sinph0","J","gamma","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","alp","gam","one_es","U","W","u","Qp","Sp","Tp","Vp","Up","omerc","sin1","cos1","ms1","ts1","sin2","cos2","ms2","ts2","ts0","rh1","theta","lcc","gfi","deltav","eps","ro","fi1","ok","krovak","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","lam","nl","tl","asq","cl","ml1","nl1","rl1","tl1","dl","dsq","cass","qsfnz","S_POLE","N_POLE","EQUIT","OBLIQ","authset","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","laea","asinz","qs","phi1z","eccnts","aea","coslon","ksp","gnom","iqsfnz","cea","dlat","eqc","bl","tanphi","mln","mlnp","ma","poly","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_im","th_n_re","th_n_im","th_n_re1","th_n_im1","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_psi_n","nzmg","mill","sinu","delta_theta","moll","eqdc","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","th1","vandg","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","aeqd","ortho","FACE_ENUM","AREA_ENUM","xy","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","qsc","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","robin","geocent","omega","yt","ba","bm","bq","tpers","rone_es","v_x","v_y","v_z","v_zp","geos","includedProjections","Proj","_","$","E","R","pgRouting","ref","html","road","response","milestoneSource","milestoneFeatures","featureIndex","fillColor","strokeColor","labelText","routeSource","modifiedFeature","routeFeatures","routeFeature","oldMilestoneFeatures","newFeature","newMilestoneFeatures","oldMilestoneFeature","oldRouteFeatures","arrowWidth","arrowFontSize","featureHover","lastPushedCoord","milestoneFeature","olGeometry","changedFeature","change","featuresLength","originFeature","destinationFeature","_a","_b","milestone","milestones","mergedRoads","previousLabel","wktGeometry"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216]}